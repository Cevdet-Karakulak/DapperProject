@model List<TopCustomerDto>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/AdminLayout/_AdminLayout.cshtml";
}

<div class="content-body">
    <div class="container-fluid mt-3">
        <div class="row">
            <div class="col-lg-3 col-sm-6 d-flex">
                <div class="card gradient-1 w-100 h-100">
                    <div class="card-body">
                        <h3 class="card-title text-white text-center">Toplam Satış Tutarı</h3>
                        <div class="value-wrapper d-flex justify-content-center align-items-center">
                            <h2 class="text-white">@String.Format("{0:N2}", ViewBag.TotalSalesAmount) ₺</h2>
                        </div>
                        <i class="fa fa-shopping-cart card-icon"></i>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-sm-6 d-flex">
                <div class="card gradient-2 w-100 h-100">
                    <div class="card-body">
                        <h3 class="card-title text-white text-center">Satış Adedi</h3>
                        <div class="value-wrapper d-flex justify-content-center align-items-center">
                            <h2 class="text-white">@String.Format("{0:N2}", ViewBag.TotalSalesCount)</h2>
                        </div>
                        <i class="fa fa-list card-icon"></i>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-sm-6 d-flex">
                <div class="card gradient-3 w-100 h-100">
                    <div class="card-body">
                        <h3 class="card-title text-white text-center">En Çok Satılan Ürün</h3>
                        <div class="value-wrapper d-flex justify-content-center align-items-center">
                            <h2 class="text-white">@ViewBag.TopProduct</h2>
                        </div>
                        <i class="fa fa-cube card-icon"></i>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-sm-6 d-flex">
                <div class="card gradient-4 w-100 h-100">
                    <div class="card-body">
                        <h3 class="card-title text-white text-center">En Çok Satış Yapılan Şehir</h3>
                        <div class="value-wrapper d-flex justify-content-center align-items-center">
                            <h2 class="text-white">@ViewBag.TopCity</h2>
                        </div>
                        <i class="fa fa-map-marker card-icon"></i>
                    </div>
                </div>
            </div>
        </div>
        <br /><br />
        <div class="row">
            <div class="col-lg-12">
                <div>
                    <h4>En Çok Alışveriş Yapan Müşteriler</h4>
                </div>
                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0">
                                <thead class="table-primary text-uppercase small">
                                    <tr>
                                        <th>Müşteri</th>
                                        <th>Toplam Satış</th>
                                        <th>Satış Adedi</th>
                                        <th>Şehir</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var customer in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center gap-2">
                                                    <div class="avatar bg-info text-white rounded-circle d-flex justify-content-center align-items-center" style="width:32px; height:32px; font-weight:bold;">
                                                        @customer.NameSurname.Substring(0, 1).ToUpper()
                                                    </div>
                                                    <span>@customer.NameSurname</span>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-success px-3 py-2">
                                                    @String.Format("{0:C}", customer.TotalPurchaseAmount)
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-warning text-dark px-3 py-2">
                                                    @customer.PurchaseCount
                                                </span>
                                            </td>
                                            <td>
                                                <i class="fas fa-map-marker-alt text-danger me-1"></i> @customer.City
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <h3>En Çok Satılan Ürünler</h3>
                <canvas id="topSellingProductsChart" style="max-width:700px; height:350px;"></canvas>

                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script>
                    var topSellingProducts = @Html.Raw(Json.Serialize(ViewBag.TopSellingProducts));

                    var labels = topSellingProducts.map(p => p.ITEMNAME);
                    var data = topSellingProducts.map(p => p.TotalAmount);

                    var ctx = document.getElementById('topSellingProductsChart').getContext('2d');
                                       new Chart(ctx, {
                                type: 'bar',
                                data: {
                                    labels: labels,
                                    datasets: [{
                                        label: 'Toplam Satış (₺)',
                                        data: data,
                                        backgroundColor: 'rgba(255, 99, 255, 0.6)',
                                        borderColor: 'rgba(54, 162, 235, 1)',
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    scales: {
                                        y: {
                                            beginAtZero: true,
                                            ticks: {
                                                callback: function(value) {
                                                    return value.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                                                }
                                            }
                                        }
                                    },
                                    plugins: {
                                        legend: {
                                            display: true,
                                            position: 'bottom' 
                                        }
                                    }
                                }
                            });
                </script>
            </div>
            <div class="col-lg-6">
                <h3>Bölgelere Göre Satışlar</h3>
                <canvas id="regionSalesChart" style="max-width:700px; height:350px;"></canvas>

                <script>
                    var regionSales = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.SalesByRegion));

                    var labels = regionSales.map(r => r.RegionName);
                    var data = regionSales.map(r => r.TotalSales);

                    var ctx = document.getElementById('regionSalesChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Toplam Satış (₺)',
                                data: data,
                                backgroundColor: 'rgba(255, 159, 64, 0.6)',
                                borderColor: 'rgba(255, 159, 64, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function(value) {
                                            return value.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                                        }
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'bottom'
                                }
                            }
                        }
                    });
                </script>
            </div>        

        </div>

    </div> 
</div> 

<br /><br />
<div class="row">
    <div class="col-lg-6 col-md-12">
        <h3>Yaş Gruplarına Göre Satışlar</h3>
        <canvas id="ageGroupSalesChart" style="max-width:700px; height:350px;"></canvas>
    </div>
    <div class="col-lg-6 col-md-12">
        <h3>Ürün Kategorilerine Göre Ciro Dağılımı</h3>
        <canvas id="salesByCategoryChart" style="max-width:700px; height:350px;"></canvas> 
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ageGroupSales = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.SalesByAgeGroup));
    var salesByCategory = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.SalesByCategory));

    var ageLabels = ageGroupSales.map(a => a.AgeGroup);
    var ageData = ageGroupSales.map(a => a.TotalRevenue);
    var ctxAge = document.getElementById('ageGroupSalesChart').getContext('2d');
    new Chart(ctxAge, {
        type: 'doughnut',
        data: {
            labels: ageLabels,
            datasets: [{
                label: 'Toplam Gelir (₺)',
                data: ageData,
                backgroundColor: [
                    '#4BC0C0', '#FF6384', '#FFCE56', '#36A2EB', '#9966FF'
                ],
                hoverOffset: 6
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'bottom' },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let label = context.label || '';
                            let value = context.parsed || 0;
                            return label + ': ' + value.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                        }
                    }
                }
            }
        }
    });

    var catLabels = salesByCategory.map(item => item.CATEGORY1);
    var catData = salesByCategory.map(item => item.TotalRevenue);
    var ctxCat = document.getElementById('salesByCategoryChart').getContext('2d');
    new Chart(ctxCat, {
        type: 'doughnut',
        data: {
            labels: catLabels,
            datasets: [{
                data: catData,
                backgroundColor: [
                    '#FF8C00', '#32CD32', '#8A2BE2', '#DC143C',
                    '#00CED1', '#FFD700', '#FF69B4', '#8B0000',
                    '#40E0D0', '#6495ED'
                ],
                hoverOffset: 6
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: { boxWidth: 20, padding: 15 }
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let label = context.label || '';
                            let value = context.parsed || 0;
                            return label + ': ' + value.toLocaleString('tr-TR', { style: 'currency', currency: 'TRY' });
                        }
                    }
                }
            }
        }
    });
</script>

    </div>
</div>
    </div>
</div>
<style>
    .card {
        position: relative;
        transition: all 0.3s ease;
    }

        .card .card-body {
            display: flex;
            flex-direction: column;
            height: 100%;
            padding-top: 15px;
        }

        .card .card-title {
            margin-bottom: 20px;
        }

    .value-wrapper {
        flex: 1; 
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .card h2 {
        font-size: 2rem;
        margin: 0;
    }

    .card .card-icon {
        position: absolute;
        bottom: 15px;
        right: 15px;
        font-size: 3rem;
        opacity: 0.3;
    }

</style>